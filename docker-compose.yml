version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
  
  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --list --bootstrap-server localhost:29092"]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: customers
    ports:
      - "5431:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - default
      - customer-airflow-bridge
  
  grafana-db:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: grafana

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    depends_on:
      - grafana-db
    environment:
      GF_DATABASE_TYPE: postgres
      GF_DATABASE_HOST: grafana-db
      GF_DATABASE_PORT: 5432
      GF_DATABASE_NAME: grafana
      GF_DATABASE_USER: postgres
      GF_DATABASE_PASSWORD: postgres

  customer-management-service:
    build: ./customer-management-service/
    ports:
      - "5000:5000"
    depends_on:
      kafka:
        condition: service_healthy
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/customers
      BOOTSTRAP_SERVERS: kafka:9092
      TOPIC: purchases
      STAGE: dev
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 10

  customer-bff-service:
    build: ./customer-bff-service/
    ports:
      - "6000:5000"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      TOPIC: purchases
      CUSTOMER_MANAGEMENT_URL: http://customer-management-service:5000
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 10

volumes:
  db_data:
    driver: local

networks:
  customer-airflow-bridge:
    external: true